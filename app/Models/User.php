<?php

namespace App\Models;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;
use Spatie\Permission\Traits\HasRoles;

class User extends Authenticatable implements MustVerifyEmail
{
    use HasApiTokens, HasFactory, Notifiable, HasRoles;

    protected $fillable = [
        'name', 'first_name', 'last_name', 'email', 'password',
        'phone', 'address', 'city', 'state', 'zip_code', 
        'last_login_at', 'is_active'
    ];

    protected $hidden = [
        'password', 'remember_token',
    ];

    protected $casts = [
        'email_verified_at' => 'datetime',
        'last_login_at' => 'datetime',
        'password' => 'hashed',
        'is_active' => 'boolean',
    ];

    /**
     * Get full name attribute
     */
    public function getFullNameAttribute()
    {
        return trim($this->first_name . ' ' . $this->last_name) ?: $this->name;
    }

    /**
     * Homes owned by this user
     */
    public function homes()
    {
        return $this->hasMany(Home::class, 'owner_id');
    }

    /**
     * Appointments as officer
     */
    public function officerAppointments()
    {
        return $this->hasMany(Appointment::class, 'officer_id');
    }

    /**
     * Payments made by this user
     */
    public function payments()
    {
        return $this->hasMany(Payment::class);
    }

    /**
     * Reports generated by this user
     */
    public function generatedReports()
    {
        return $this->hasMany(Report::class, 'generated_by');
    }

    /**
     * Items documented by this user (officer)
     */
    public function documentedItems()
    {
        return $this->hasMany(Item::class, 'documented_by');
    }

    /**
     * Check if user is homeowner
     */
    public function isHomeowner()
    {
        return $this->hasRole('homeowner');
    }

    /**
     * Check if user is officer
     */
    public function isOfficer()
    {
        return $this->hasRole('officer');
    }

    /**
     * Check if user is admin
     */
    public function isAdmin()
    {
        return $this->hasRole('admin');
    }
}